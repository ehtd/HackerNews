//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../../HNCore/Java-core/src/main//java/io/ernesto/hn/ContentProvider.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ContentProvider")
#ifdef RESTRICT_ContentProvider
#define INCLUDE_ALL_ContentProvider 0
#else
#define INCLUDE_ALL_ContentProvider 1
#endif
#undef RESTRICT_ContentProvider

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IOEContentProvider_) && (INCLUDE_ALL_ContentProvider || defined(INCLUDE_IOEContentProvider))
#define IOEContentProvider_

@class IOSObjectArray;
@class OrgJsonJSONArray;

@interface IOEContentProvider : NSObject

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)baseURL
                    withNSString:(NSString *)contentPath;

- (IOSObjectArray * __nullable)getStories;

- (OrgJsonJSONArray * __nullable)getStoryList;

@end

J2OBJC_EMPTY_STATIC_INIT(IOEContentProvider)

FOUNDATION_EXPORT void IOEContentProvider_initWithNSString_withNSString_(IOEContentProvider *self, NSString *baseURL, NSString *contentPath);

FOUNDATION_EXPORT IOEContentProvider *new_IOEContentProvider_initWithNSString_withNSString_(NSString *baseURL, NSString *contentPath) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IOEContentProvider *create_IOEContentProvider_initWithNSString_withNSString_(NSString *baseURL, NSString *contentPath);

J2OBJC_TYPE_LITERAL_HEADER(IOEContentProvider)

@compatibility_alias IoErnestoHnContentProvider IOEContentProvider;

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ContentProvider")
