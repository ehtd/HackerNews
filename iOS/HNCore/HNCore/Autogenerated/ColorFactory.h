//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../../HNCore/Java-core/src/main//java/io/ernesto/hn/ColorFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ColorFactory")
#ifdef RESTRICT_ColorFactory
#define INCLUDE_ALL_ColorFactory 0
#else
#define INCLUDE_ALL_ColorFactory 1
#endif
#undef RESTRICT_ColorFactory

#if !defined (IOEColorFactory_) && (INCLUDE_ALL_ColorFactory || defined(INCLUDE_IOEColorFactory))
#define IOEColorFactory_

@class IOSIntArray;

@interface IOEColorFactory : NSObject

+ (jint)darkGrayColor;

+ (void)setDarkGrayColor:(jint)value;

+ (jint)lightColor;

+ (void)setLightColor:(jint)value;

+ (jint)blueColor;

+ (void)setBlueColor:(jint)value;

+ (jint)turquoiseColor;

+ (void)setTurquoiseColor:(jint)value;

+ (jint)emeraldColor;

+ (void)setEmeraldColor:(jint)value;

+ (jint)amethystColor;

+ (void)setAmethystColor:(jint)value;

+ (jint)sunFlowerColor;

+ (void)setSunFlowerColor:(jint)value;

+ (jint)carrotColor;

+ (void)setCarrotColor:(jint)value;

+ (jint)alizarinColor;

+ (void)setAlizarinColor:(jint)value;

+ (jint)wisteriaColor;

+ (void)setWisteriaColor:(jint)value;

+ (jint)orangeColor;

+ (void)setOrangeColor:(jint)value;

+ (jint)pumpkinColor;

+ (void)setPumpkinColor:(jint)value;

+ (jint)belizeHoleColor;

+ (void)setBelizeHoleColor:(jint)value;

#pragma mark Public

- (instancetype)init;

+ (jint)appendAlphaWithInt:(jint)n
                   withInt:(jint)alpha;

+ (IOSIntArray *)argbColors;

+ (jint)colorFromNumberWithInt:(jint)n;

+ (jint)prefixAlphaWithInt:(jint)alpha
                   withInt:(jint)n;

+ (IOSIntArray *)rgbColors;

+ (IOSIntArray *)shuffledArgbColors;

@end

J2OBJC_EMPTY_STATIC_INIT(IOEColorFactory)

inline jint IOEColorFactory_get_darkGrayColor();
inline jint IOEColorFactory_set_darkGrayColor(jint value);
inline jint *IOEColorFactory_getRef_darkGrayColor();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint IOEColorFactory_darkGrayColor;
J2OBJC_STATIC_FIELD_PRIMITIVE(IOEColorFactory, darkGrayColor, jint)

inline jint IOEColorFactory_get_lightColor();
inline jint IOEColorFactory_set_lightColor(jint value);
inline jint *IOEColorFactory_getRef_lightColor();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint IOEColorFactory_lightColor;
J2OBJC_STATIC_FIELD_PRIMITIVE(IOEColorFactory, lightColor, jint)

inline jint IOEColorFactory_get_blueColor();
inline jint IOEColorFactory_set_blueColor(jint value);
inline jint *IOEColorFactory_getRef_blueColor();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint IOEColorFactory_blueColor;
J2OBJC_STATIC_FIELD_PRIMITIVE(IOEColorFactory, blueColor, jint)

inline jint IOEColorFactory_get_turquoiseColor();
inline jint IOEColorFactory_set_turquoiseColor(jint value);
inline jint *IOEColorFactory_getRef_turquoiseColor();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint IOEColorFactory_turquoiseColor;
J2OBJC_STATIC_FIELD_PRIMITIVE(IOEColorFactory, turquoiseColor, jint)

inline jint IOEColorFactory_get_emeraldColor();
inline jint IOEColorFactory_set_emeraldColor(jint value);
inline jint *IOEColorFactory_getRef_emeraldColor();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint IOEColorFactory_emeraldColor;
J2OBJC_STATIC_FIELD_PRIMITIVE(IOEColorFactory, emeraldColor, jint)

inline jint IOEColorFactory_get_amethystColor();
inline jint IOEColorFactory_set_amethystColor(jint value);
inline jint *IOEColorFactory_getRef_amethystColor();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint IOEColorFactory_amethystColor;
J2OBJC_STATIC_FIELD_PRIMITIVE(IOEColorFactory, amethystColor, jint)

inline jint IOEColorFactory_get_sunFlowerColor();
inline jint IOEColorFactory_set_sunFlowerColor(jint value);
inline jint *IOEColorFactory_getRef_sunFlowerColor();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint IOEColorFactory_sunFlowerColor;
J2OBJC_STATIC_FIELD_PRIMITIVE(IOEColorFactory, sunFlowerColor, jint)

inline jint IOEColorFactory_get_carrotColor();
inline jint IOEColorFactory_set_carrotColor(jint value);
inline jint *IOEColorFactory_getRef_carrotColor();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint IOEColorFactory_carrotColor;
J2OBJC_STATIC_FIELD_PRIMITIVE(IOEColorFactory, carrotColor, jint)

inline jint IOEColorFactory_get_alizarinColor();
inline jint IOEColorFactory_set_alizarinColor(jint value);
inline jint *IOEColorFactory_getRef_alizarinColor();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint IOEColorFactory_alizarinColor;
J2OBJC_STATIC_FIELD_PRIMITIVE(IOEColorFactory, alizarinColor, jint)

inline jint IOEColorFactory_get_wisteriaColor();
inline jint IOEColorFactory_set_wisteriaColor(jint value);
inline jint *IOEColorFactory_getRef_wisteriaColor();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint IOEColorFactory_wisteriaColor;
J2OBJC_STATIC_FIELD_PRIMITIVE(IOEColorFactory, wisteriaColor, jint)

inline jint IOEColorFactory_get_orangeColor();
inline jint IOEColorFactory_set_orangeColor(jint value);
inline jint *IOEColorFactory_getRef_orangeColor();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint IOEColorFactory_orangeColor;
J2OBJC_STATIC_FIELD_PRIMITIVE(IOEColorFactory, orangeColor, jint)

inline jint IOEColorFactory_get_pumpkinColor();
inline jint IOEColorFactory_set_pumpkinColor(jint value);
inline jint *IOEColorFactory_getRef_pumpkinColor();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint IOEColorFactory_pumpkinColor;
J2OBJC_STATIC_FIELD_PRIMITIVE(IOEColorFactory, pumpkinColor, jint)

inline jint IOEColorFactory_get_belizeHoleColor();
inline jint IOEColorFactory_set_belizeHoleColor(jint value);
inline jint *IOEColorFactory_getRef_belizeHoleColor();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint IOEColorFactory_belizeHoleColor;
J2OBJC_STATIC_FIELD_PRIMITIVE(IOEColorFactory, belizeHoleColor, jint)

FOUNDATION_EXPORT void IOEColorFactory_init(IOEColorFactory *self);

FOUNDATION_EXPORT IOEColorFactory *new_IOEColorFactory_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IOEColorFactory *create_IOEColorFactory_init();

FOUNDATION_EXPORT IOSIntArray *IOEColorFactory_rgbColors();

FOUNDATION_EXPORT IOSIntArray *IOEColorFactory_argbColors();

FOUNDATION_EXPORT IOSIntArray *IOEColorFactory_shuffledArgbColors();

FOUNDATION_EXPORT jint IOEColorFactory_colorFromNumberWithInt_(jint n);

FOUNDATION_EXPORT jint IOEColorFactory_appendAlphaWithInt_withInt_(jint n, jint alpha);

FOUNDATION_EXPORT jint IOEColorFactory_prefixAlphaWithInt_withInt_(jint alpha, jint n);

J2OBJC_TYPE_LITERAL_HEADER(IOEColorFactory)

@compatibility_alias IoErnestoHnColorFactory IOEColorFactory;

#endif

#pragma pop_macro("INCLUDE_ALL_ColorFactory")
