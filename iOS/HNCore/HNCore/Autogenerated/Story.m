//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../../HNCore/Java-core/src/main//java/io/ernesto/hn/Story.java
//

#include "J2ObjC_source.h"
#include "Story.h"

@interface IOEStory () {
 @public
  NSString *title_;
  NSString *author_;
  NSString *comments_;
  NSString *url_;
}

@end

J2OBJC_FIELD_SETTER(IOEStory, title_, NSString *)
J2OBJC_FIELD_SETTER(IOEStory, author_, NSString *)
J2OBJC_FIELD_SETTER(IOEStory, comments_, NSString *)
J2OBJC_FIELD_SETTER(IOEStory, url_, NSString *)

#line 1 "/Users/ernesto.torres/Documents/Repositories/Personal/HackerNews/HNCore/Java-core/src/main/java/io/ernesto/hn/Story.java"


#line 7
@implementation IOEStory


#line 13
- (instancetype)initWithNSString:(NSString *)title
                    withNSString:(NSString *)author
                    withNSString:(NSString *)comments
                    withNSString:(NSString *)url {
  IOEStory_initWithNSString_withNSString_withNSString_withNSString_(self, title, author, comments, url);
  return self;
}


#line 20
- (NSString *)description {
  
#line 22
  return title_;
}


#line 25
- (NSString *)getTitle {
  return title_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:withNSString:withNSString:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(getTitle);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "title_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "author_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "comments_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "url_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LNSString;LNSString;", "toString" };
  static const J2ObjcClassInfo _IOEStory = { "Story", "io.ernesto.hn", ptrTable, methods, fields, 7, 0x1, 3, 4, -1, -1, -1, -1, -1 };
  return &_IOEStory;
}

@end


#line 13
void IOEStory_initWithNSString_withNSString_withNSString_withNSString_(IOEStory *self, NSString *title, NSString *author, NSString *comments, NSString *url) {
  NSObject_init(self);
  
#line 14
  self->title_ = title;
  self->author_ = author;
  self->comments_ = comments;
  self->url_ = url;
}


#line 13
IOEStory *new_IOEStory_initWithNSString_withNSString_withNSString_withNSString_(NSString *title, NSString *author, NSString *comments, NSString *url) {
  J2OBJC_NEW_IMPL(IOEStory, initWithNSString_withNSString_withNSString_withNSString_, title, author, comments, url)
}


#line 13
IOEStory *create_IOEStory_initWithNSString_withNSString_withNSString_withNSString_(NSString *title, NSString *author, NSString *comments, NSString *url) {
  J2OBJC_CREATE_IMPL(IOEStory, initWithNSString_withNSString_withNSString_withNSString_, title, author, comments, url)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IOEStory)
